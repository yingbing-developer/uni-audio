{"version":3,"sources":["webpack:///G:/my-project/uni-audio/uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.vue?b688","webpack:///G:/my-project/uni-audio/uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.vue?339f","webpack:///G:/my-project/uni-audio/uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.vue?fc7d","webpack:///G:/my-project/uni-audio/uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.vue?d45f","uni-app:///uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.vue"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2H;AAC3H;AACkE;AACL;;;AAG7D;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,yFAAM;AACR,EAAE,kGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,6FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,4SAEN;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAwmB,CAAgB,koBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACe5nB,a;AACA;AACA;AACA;AACA;AACA,iBADA;AAEA,aAFA,sBAEA;AACA;AACA,OAJA,EAFA;;AAQA;AACA;AACA,mBADA;AAEA,mBAFA,EATA;;AAaA;AACA;AACA,mBADA;AAEA,oBAFA,EAdA;;AAkBA;AACA;AACA,kBADA;AAEA,kBAFA,EAnBA;;AAuBA;AACA;AACA,kBADA;AAEA,gBAFA,EAxBA;;AA4BA;AACA;AACA,kBADA;AAEA,gBAFA,EA7BA;;AAiCA;AACA;AACA,kBADA;AAEA,sBAFA,EAlCA;;AAsCA;AACA;AACA,kBADA;AAEA,sBAFA,EAvCA;;AA2CA;AACA;AACA,kBADA;AAEA,qBAFA,EA5CA;;AAgDA;AACA;AACA,kBADA;AAEA,wBAFA,EAjDA;;AAqDA;AACA;AACA,kBADA;AAEA,wBAFA,EAtDA;;AA0DA;AACA,2BADA;AAEA,aAFA,sBAEA;AACA;AACA,OAJA,EA1DA;;AAgEA;AACA;AACA,kBADA;AAEA,gCAFA,EAjEA;;AAqEA;AACA;AACA,kBADA;AAEA,iBAFA,EAtEA;;AA0EA;AACA;AACA,kBADA;AAEA,uBAFA,EA3EA;;AA+EA;AACA;AACA,2BADA;AAEA,aAFA,sBAEA;AACA;AACA,OAJA,EAhFA,EADA;;;AAwFA,MAxFA,kBAwFA;AACA;AACA;AACA,oBAFA;AAGA;AACA,uBAJA;AAKA;AACA,oBANA;AAOA;AACA,eARA;;AAUA,GAnGA;AAoGA;AACA,iBADA,2BACA;AACA;AACA,KAHA,EApGA;;AAyGA,SAzGA,qBAyGA;AACA;AACA;AACA;AACA,GA7GA;AA8GA,eA9GA,2BA8GA;AACA;AACA,GAhHA;AAiHA;AACA;AACA,QAFA,gBAEA,IAFA,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARA;AASA;AACA;AACA,qCADA;;AAGA,OAJA;AAKA;AACA;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGA;AACA;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA,OARA;AASA;AACA;AACA,OAFA;AAGA;AACA;AACA;AACA,OAHA;AAIA;AACA;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGA,KA/DA;AAgEA;AACA,QAjEA,kBAiEA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA,KA3EA;AA4EA;AACA,SA7EA,mBA6EA;AACA;AACA,KA/EA;AAgFA;AACA,QAjFA,kBAiFA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,KA3FA;AA4FA;AACA,QA7FA,gBA6FA,OA7FA,EA6FA;AACA;AACA,KA/FA;AAgGA;AACA,UAjGA,kBAiGA,EAjGA,EAiGA;AACA;AACA;AACA,KApGA;AAqGA;AACA,QAtGA,kBAsGA;AACA;AACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAhHA;AAiHA;AACA,QAlHA,kBAkHA;AACA;AACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA5HA;AA6HA,kBA7HA,4BA6HA;AACA;AACA;AACA;AACA;AACA,OAFA;AAGA,KAnIA;AAoIA;AACA,gBArIA,wBAqIA,IArIA,EAqIA,IArIA,EAqIA,KArIA,EAqIA;AACA;AACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KA9IA;AA+IA;AACA,oBAhJA,4BAgJA,GAhJA,EAgJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA3JA;AA4JA,eA5JA,uBA4JA,CA5JA,EA4JA;AACA;AACA,KA9JA,EAjHA;;AAiRA;AACA,gBADA,wBACA,MADA,EACA;AACA;AACA,KAHA;AAIA,UAJA,kBAIA,MAJA,EAIA;AACA;AACA,KANA;AAOA,YAPA,oBAOA,MAPA,EAOA;AACA;AACA,KATA;AAUA,aAVA,qBAUA,MAVA,EAUA;AACA;AACA,KAZA;AAaA,UAbA,kBAaA,MAbA,EAaA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAnBA;AAoBA,iBApBA,yBAoBA,MApBA,EAoBA,MApBA,EAoBA;AACA;AACA,uIADA,CACA;AACA,uIAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAHA,EAGA,EAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAHA;AAIA;AACA,OAtBA,MAsBA;AACA;AACA;AACA;AACA,KA/CA,EAjRA,E","file":"uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./yingbing-audio.vue?vue&type=template&id=0f736c5e&\"\nvar renderjs\nimport script from \"./yingbing-audio.vue?vue&type=script&lang=js&\"\nexport * from \"./yingbing-audio.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-audio/components/yingbing-audio/yingbing-audio.vue\"\nexport default component.exports","export * from \"-!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./yingbing-audio.vue?vue&type=template&id=0f736c5e&\"","var components\ntry {\n  components = {\n    yingbingLyric: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/yingbing-audio/components/yingbing-lyric/yingbing-lyric\" */ \"@/uni_modules/yingbing-audio/components/yingbing-lyric/yingbing-lyric.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./yingbing-audio.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!F:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./yingbing-audio.vue?vue&type=script&lang=js&\"","<template>\r\n\t<yingbing-lyric\r\n\tv-if=\"lyricModel != 'close' && currentSong\"\r\n\t:isShow=\"lyricModel == 'overall'\"\r\n\t:lyric=\"lyric\"\r\n\t:fontColor=\"fontColor\"\r\n\t:strokeColor=\"strokeColor\"\r\n\t:fontSize=\"fontSize\"\r\n\t:verticalAlign=\"verticalAlign\"\r\n\t:offset=\"offset\"\r\n\t:title=\"lyricDefaultTitle\"\r\n\t:currentTime=\"currentTime\"\r\n\t@lyricChange=\"lyricChange\"></yingbing-lyric>\r\n</template>\r\n<script>\r\n\tlet instance;\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\t//播放列表\r\n\t\t\tplayList: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault () { \r\n\t\t\t\t\treturn new Array\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//是否暂停\r\n\t\t\tpaused: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\t//是否后台播放 仅app有效\r\n\t\t\tplayback: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\t//播放倍率\r\n\t\t\tplaybackRate: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 1.0\r\n\t\t\t},\r\n\t\t\t//音量\r\n\t\t\tvolume: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 1\r\n\t\t\t},\r\n\t\t\t//播放开始位置\r\n\t\t\tstartTime: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0\r\n\t\t\t},\r\n\t\t\t//播放模式 round|random|loop 顺序|随机|循环\r\n\t\t\tplayMode: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'round'\r\n\t\t\t},\r\n\t\t\t//歌词模式 close|hidden|overall 不计算也不显示全局歌词|隐藏全局歌词但计算歌词|计算并显示全局歌词\r\n\t\t\tlyricModel: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'close'\r\n\t\t\t},\r\n\t\t\t//没有歌词但要展示全局歌词时的默认文字\r\n\t\t\tlyricDefaultTitle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '暂无歌词'\r\n\t\t\t},\r\n\t\t\t//歌词颜色\r\n\t\t\tfontColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#2ca2f9'\r\n\t\t\t},\r\n\t\t\t//歌词描边颜色\r\n\t\t\tstrokeColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#333333'\r\n\t\t\t},\r\n\t\t\tfontSize: {\r\n\t\t\t\ttype: Number|String,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn uni.upx2px(35)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//歌词字体\r\n\t\t\tfontFamily: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'Times New Roman'\r\n\t\t\t},\r\n\t\t\t//歌词字体文件路径 仅支持app端\r\n\t\t\tfontSrc: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t//上下定位 top|bottom 上|下\r\n\t\t\tverticalAlign: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'bottom'\r\n\t\t\t},\r\n\t\t\t//定位的偏移量\r\n\t\t\toffset: {\r\n\t\t\t\ttype: Number|String,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn uni.upx2px(15)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata () {\r\n\t\t\treturn {\r\n\t\t\t\t//随机播放歌曲\r\n\t\t\t\trandomList: [],\r\n\t\t\t\t//当前播放歌曲信息\r\n\t\t\t\tcurrentSong: null,\r\n\t\t\t\t//当前播放位置\r\n\t\t\t\tcurrentTime: 0,\r\n\t\t\t\t//当前播放歌曲的歌词\r\n\t\t\t\tlyric: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tplayListWatch () {\r\n\t\t\t    return JSON.parse(JSON.stringify(this.playList));\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tif ( this.playList ) {\r\n\t\t\t\tthis.initRandomList()\r\n\t\t\t}\r\n\t\t},\r\n\t\tbeforeDestroy() {\r\n\t\t\tthis.stop()\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t//初始化音乐\r\n\t\t\tinit (song) {\r\n\t\t\t\tthis.stop()\r\n\t\t\t\tthis.currentSong = song\r\n\t\t\t\tinstance = uni.createInnerAudioContext()\r\n\t\t\t\tinstance.playbackRate = this.playbackRate\r\n\t\t\t\tinstance.volume = this.volume\r\n\t\t\t\tinstance.sessionCategory = this.playback ? 'playback' : 'ambient'\r\n\t\t\t\tinstance.startTime = this.startTime\r\n\t\t\t\tif ( song.src ) {\r\n\t\t\t\t\tinstance.src = song.src\r\n\t\t\t\t\tthis.play()\r\n\t\t\t\t}\r\n\t\t\t\tthis.lyric = song.lyric || []\r\n\t\t\t\tthis.$emit('currentChange', song, ({src, lyric}) => {\r\n\t\t\t\t\tif ( src ) {\r\n\t\t\t\t\t\tinstance.src = src\r\n\t\t\t\t\t\tthis.play()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( lyric && lyric.length > 0 ) {\r\n\t\t\t\t\t\tthis.lyric = lyric\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onCanplay(() => {\r\n\t\t\t\t\tthis.$emit('onCanplay', Object.assign({}, song, {\r\n\t\t\t\t\t\tduration: instance.duration\r\n\t\t\t\t\t}))\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onPlay(() => {\r\n\t\t\t\t\tthis.$emit('onPlay')\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onPause(() => {\r\n\t\t\t\t\tthis.$emit('onPause')\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onStop(() => {\r\n\t\t\t\t\tthis.$emit('onStop')\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onEnded(() => {\r\n\t\t\t\t\tthis.$emit('onEnded')\r\n\t\t\t\t\tif ( this.playMode == 'loop' ) {\r\n\t\t\t\t\t\tthis.seek(0)\r\n\t\t\t\t\t\tthis.play()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.next()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onError(() => {\r\n\t\t\t\t\tthis.$emit('onError')\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onTimeUpdate(() => {\r\n\t\t\t\t\tthis.currentTime = instance.currentTime\r\n\t\t\t\t\tthis.$emit('onTimeUpdate', instance.currentTime)\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onWaiting(() => {\r\n\t\t\t\t\tthis.$emit('onWaiting')\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onSeeking(() => {\r\n\t\t\t\t\tthis.$emit('onSeeking', instance.currentTime)\r\n\t\t\t\t})\r\n\t\t\t\tinstance.onSeeked(() => {\r\n\t\t\t\t\tthis.$emit('onSeeked', instance.currentTime)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//播放音乐\r\n\t\t\tplay () {\r\n\t\t\t\tif ( instance && instance.src ) {\r\n\t\t\t\t\tinstance.paused ? instance.play() : null\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( this.playList.length > 0 ) {\r\n\t\t\t\t\t\tthis.next()\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\tthrow new Error('playList is empty')\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t},\r\n\t\t\t//暂停音乐\r\n\t\t\tpause () {\r\n\t\t\t\tinstance && instance.src && !instance.paused ? instance.pause() : null\r\n\t\t\t},\r\n\t\t\t//停止音乐\r\n\t\t\tstop () {\r\n\t\t\t\tif ( instance && instance.src ) {\r\n\t\t\t\t\tthis.currentSong = null\r\n\t\t\t\t\tthis.lyric = []\r\n\t\t\t\t\tinstance.destroy()\r\n\t\t\t\t\tinstance = null\r\n\t\t\t\t\t// #ifdef APP-PLUS\r\n\t\t\t\t\tthis.$emit('onStop')\r\n\t\t\t\t\t// #endif\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//跳转播放位置\r\n\t\t\tseek (seconds) {\r\n\t\t\t\tinstance && instance.src && instance.duration > seconds ? instance.seek(seconds) : null\r\n\t\t\t},\r\n\t\t\t//指定id歌曲播放\r\n\t\t\tchange (id) {\r\n\t\t\t\tlet index = this.playList.findIndex(song => song.id == id);\r\n\t\t\t\tindex > -1 ? this.init(this.playList[index]) : null\r\n\t\t\t},\r\n\t\t\t//播放上一首\r\n\t\t\tprev () {\r\n\t\t\t\tlet playOrder = this.playMode == 'random' ? this.randomList : this.playList\r\n\t\t\t\tlet orderSong = this.currentSong ? this.getOrderSong(playOrder, this.currentSong, 'prev') : null\r\n\t\t\t\tif ( orderSong ) {\r\n\t\t\t\t\tthis.init(orderSong)\r\n\t\t\t\t} else if ( this.playList.length > 0 ) {\r\n\t\t\t\t\tthis.init(this.playMode == 'random' ? this.randomList[0] : this.playList[0])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('playList is empty')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//播放下一首\r\n\t\t\tnext () {\r\n\t\t\t\tlet playOrder = this.playMode == 'random' ? this.randomList : this.playList\r\n\t\t\t\tlet orderSong = this.currentSong ? this.getOrderSong(playOrder, this.currentSong, 'next') : null\r\n\t\t\t\tif ( orderSong ) {\r\n\t\t\t\t\tthis.init(orderSong)\r\n\t\t\t\t} else if ( this.playList.length > 0 ) {\r\n\t\t\t\t\tthis.init(this.playMode == 'random' ? this.randomList[0] : this.playList[0])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('playList is empty')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinitRandomList () {\r\n\t\t\t\tconst arr = this.randomSoleNumber(this.playList.length)\r\n\t\t\t\tthis.randomList = []\r\n\t\t\t\tarr.forEach(index => {\r\n\t\t\t\t\tthis.randomList.push(this.playList[index])\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//获取订单歌曲\r\n\t\t\tgetOrderSong (list, song, order) {\r\n\t\t\t\tlet currentIndex = list.findIndex(order => order.id == song.id)\r\n\t\t\t\tlet nextIndex = 0\r\n\t\t\t\tif ( order == 'prev' ) {\r\n\t\t\t\t\tnextIndex = (currentIndex - 1 >= 0 ) ? currentIndex - 1 : list.length - 1\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextIndex = (currentIndex + 1 > list.length - 1) ? 0 : currentIndex + 1\r\n\t\t\t\t}\r\n\t\t\t\treturn list[nextIndex]\r\n\t\t\t},\r\n\t\t\t//随机生成一组指定长度的循环不重复的数组\r\n\t\t\trandomSoleNumber (len) {\r\n\t\t\t\tlet min = 0;\r\n\t\t\t\tlet max = len - 1;\r\n\t\t\t\tlet arr = [];\r\n\t\t\t\twhile ( arr.length < len ) {\r\n\t\t\t\t\tlet value = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t\t\t\t\tif ( arr.indexOf(value) == -1 ) {\r\n\t\t\t\t\t\tarr.push( value )\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn arr;\r\n\t\t\t},\r\n\t\t\tlyricChange (e) {\r\n\t\t\t\tthis.$emit('lyricChange', e)\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tplaybackRate ( newVal ) {\r\n\t\t\t\tinstance ? instance.playbackRate = newVal : null\r\n\t\t\t},\r\n\t\t\tvolume ( newVal ) {\r\n\t\t\t\tinstance ? instance.volume = newVal : null\r\n\t\t\t},\r\n\t\t\tplayback ( newVal ) {\r\n\t\t\t\tinstance ? (instance.sessionCategory = newVal ? 'playback' : 'ambient') : null\r\n\t\t\t},\r\n\t\t\tstartTime ( newVal ) {\r\n\t\t\t\tinstance ? instance.startTime = newVal : null\r\n\t\t\t},\r\n\t\t\tpaused ( newVal ) {\r\n\t\t\t\tif ( newVal ) {\r\n\t\t\t\t\tthis.pause()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.play()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplayListWatch (newVal, oldVal) {\r\n\t\t\t\tif ( newVal.length > 0 ) {\r\n\t\t\t\t\tlet arr1 = newVal.filter(item => oldVal.findIndex(oldItem => oldItem.id == item.id) == -1 )//新增的歌曲\r\n\t\t\t\t\tlet arr2 = oldVal.filter(item => newVal.findIndex(oldItem => oldItem.id == item.id) == -1 )//删除的歌曲\r\n\t\t\t\t\tlet deleteIndex = arr2.findIndex(re => re.id == this.currentSong?.id)\r\n\t\t\t\t\t//如果删除的歌曲中有正在播放的歌曲则切换到下一首播放\r\n\t\t\t\t\tif ( deleteIndex > -1 ) {\r\n\t\t\t\t\t\tlet unique = oldVal.concat(newVal)\r\n\t\t\t\t\t\tlet obj = {};\r\n\t\t\t\t\t\tunique = unique.reduce((item, next) => {\r\n\t\t\t\t\t\t    obj[next.id] ? '' : obj[next.id] = true && item.push(next);\r\n\t\t\t\t\t\t    return item;\r\n\t\t\t\t\t\t}, []);\r\n\t\t\t\t\t\tunique = unique.filter(item => arr2.findIndex(oItem => oItem.id == item.id) == -1 || item.id == this.currentSong?.id)\r\n\t\t\t\t\t\tthis.init(this.getOrderSong(unique, this.currentSong, 'next'))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet randomList = this.randomList.filter(order => arr2.findIndex(item => item.id == order.id) == -1)\r\n\t\t\t\t\tconst rnd = this.randomSoleNumber(arr1.length)\r\n\t\t\t\t\trnd.forEach(num => {\r\n\t\t\t\t\t\tlet index = Math.floor(Math.random() * randomList.length);\r\n\t\t\t\t\t\trandomList.splice(index, 0, arr1[num])\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.randomList = randomList\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.randomList = []\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\n</script>\n<style>\n</style>\n"],"sourceRoot":""}